@page
@model RazorPage.Pages.Admin.Orders.DetailsModel

@{
    ViewData["Title"] = "Details";
    Layout = "LayoutAdmin";
}

<div class="d-flex justify-content-between">
    <a asp-page="./Index">
        <img src="~/images/back-icon-3.png" style="padding-left: 30px;" />
    </a>
    <div>
    </div>
    <div>
    </div>
</div>
<div class="d-flex justify-content-center">
    <span class="mx-2 span-custom"><a style="font-weight: 500; color: #5A5A5A; text-decoration: none;" asp-page="./Index">Orders</a></span>
    <span> / </span>
    <span class="mx-2" style="font-weight: 500; color: #000;">Details</span>
</div>
<h1 class="text-center mt-5 mb-5">DETAILS</h1>


<div class="card shadow p-3 mb-5 bg-white rounded" style="margin: 0 200px 0 200px;">
    <h4>Order</h4>
    <hr />
    <dl class="row">
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Order.Total)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Order.Total)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Order.OrderStatus)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Order.OrderStatus)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Order.OrdeDate)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Order.OrdeDate)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Order.ShippedDate)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Order.ShippedDate)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Order.ShipAddress)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Order.ShipAddress)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Order.Paymentmethod)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Order.Paymentmethod)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Order.PaymentStatus)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Order.PaymentStatus)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Order.User)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Order.User.Address)
        </dd>
    </dl>
</div>


<div class="card shadow p-3 mb-5 bg-white rounded" style="margin: 0 200px 0 200px;">
    <h4 class="text-center" style="font-weight: 500;">Order Details</h4>
    <hr />

    <h5 style="font-weight: Bold;">Combo</h5>

    @if (Model.orderComboDetails != null && Model.orderComboDetails.Count > 0)
    {
        <div>
            @foreach (var item in Model.orderComboDetails)
            {
                <div>
                    <h5>Combo @item.Combo.ComboName</h5>
                    <p><span style="font-weight: 500">Quantity: </span>@item.Quantity</p>
                    <p><span style="font-weight: 500">Unit price after discounted: </span>@(((double)item.UnitPrice) - ((double)item.UnitPrice * item.Discount / 100))</p>
                </div>
            }
        </div>
    }
    <hr />
    <h5 style="font-weight: Bold;">Product</h5>
    @if (Model.orderProductDetails != null && Model.orderProductDetails.Count > 0)
    {
        <div>
            @foreach (var item in Model.orderProductDetails)
            {
                <div>
                    <h5>Product @item.Product.ProductName</h5>
                    <p><span style="font-weight: 500">Quantity: </span>@item.Quantity</p>
                    <p><span style="font-weight: 500">Unit price after discounted: </span>@(((double)item.UnitPrice) - ((double)item.UnitPrice * item.Discount / 100))</p>
                </div>
            }
        </div>
    }
</div>
